<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44450</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <Description>Data Access Layer for the VetClinic Solution</Description>
    <Copyright>Copyright Â© 2022 ITSA Assessment</Copyright>
    <PackageProjectUrl>https://github.com/MarvelousME/ITSA-Assessment</PackageProjectUrl>
    <Company>ITSA Assessment</Company>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="11.1.0" />
    <PackageReference Include="IdentityServer.ExtensionGrant.Delegation" Version="1.0.1" />
    <PackageReference Include="IdentityServer4" Version="4.1.2" />
    <PackageReference Include="IdentityServer4.AccessTokenValidation" Version="3.0.1" />
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="4.1.2" />
    <PackageReference Include="MailKit" Version="3.3.0" />
    <PackageReference Include="Microsoft.AspNetCore.JsonPatch" Version="6.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="6.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.6" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="Authorization\**" />
    <Content Remove="Controllers\**" />
    <Content Remove="Helpers\**" />
    <Content Remove="Migrations\**" />
    <Content Remove="ViewModels\**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <Compile Remove="Authorization\**" />
    <Compile Remove="Controllers\**" />
    <Compile Remove="Helpers\**" />
    <Compile Remove="Migrations\**" />
    <Compile Remove="ViewModels\**" />
    <EmbeddedResource Remove="Authorization\**" />
    <EmbeddedResource Remove="Controllers\**" />
    <EmbeddedResource Remove="Helpers\**" />
    <EmbeddedResource Remove="Migrations\**" />
    <EmbeddedResource Remove="ViewModels\**" />
    <None Remove="$(SpaRoot)dist\**" />
    <None Remove="$(SpaRoot).angular\**" />
    <None Remove="Authorization\**" />
    <None Remove="Controllers\**" />
    <None Remove="Helpers\**" />
    <None Remove="Logs\**" />
    <None Remove="Migrations\**" />
    <None Remove="ViewModels\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="AppSettings.cs" />
    <Compile Remove="AuthorizeCheckOperationFilter.cs" />
    <Compile Remove="DesignTimeDbContextFactory.cs" />
    <Compile Remove="IdentityServerConfig.cs" />
  </ItemGroup>

  <ItemGroup>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>